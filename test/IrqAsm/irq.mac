#------------------------------------------------------------------------------
#-    ATMEL Microcontroller Software Support  -   ROUSSET -
#------------------------------------------------------------------------------
# The software is delivered "AS IS" without warranty or condition of any
# kind, either express, implied or statutory. This includes without
# limitation any warranty or condition with respect to merchantability or
# fitness for any particular purpose, or against the infringements of
# intellectual property rights of others.
#------------------------------------------------------------------------------
#- File source          : irq.mac
#- Object               : Entry and exit IRQ Macro
#-
#- 1.0 01/04/00 JCZ     : Creation
#- 1.1 02/11/00 JPP     : Green Hills
#------------------------------------------------------------------------------

            .INCLUDE     "../include/At91M55800.inc"

#- IRQ Entry
#-----------
            .macro IRQ_ENTRY   reg=r4

#- Adjust and save LR_irq in IRQ stack
            sub         r14, r14, #4
            stmfd       sp!, {r14}

#- Write in the IVR to support Protect Mode
#- No effect in Normal Mode
#- De-assert the NIRQ and clear the source in Protect Mode
            ldr         r14, =AIC_BASE
            str         r14, [r14, #AIC_IVR]

#- Save SPSR and r0 in IRQ stack
            mrs         r14, SPSR
            stmfd       sp!, {r0, r14}

#- Enable Interrupt and Switch in SYS Mode
            mrs         r0, CPSR
            bic         r0, r0, #I_BIT
            orr         r0, r0, #ARM_MODE_SYS
            msr         CPSR_c, r0

#- Save scratch/used registers and LR in User Stack
#            IF  "$reg" = ""
#            stmfd       sp!, { r1-r3, r12, r14}
#            ELSE
             stmfd       sp!, { r1-r3, r4, r12, r14}
#            ENDIF

            .endm

#- IRQ Exit
#-----------
            .macro IRQ_EXIT   reg=r4
   
#- Restore scratch/used registers and LR from User Stack
#            IF  "$reg" = ""
#            ldmia       sp!, { r1-r3, r12, r14}
#            ELSE
             ldmia       sp!, { r1-r3, r4, r12, r14}
#            ENDIF

#- Disable Interrupt and switch back in IRQ mode
            mrs         r0, CPSR
            bic         r0, r0, #ARM_MODE_SYS
            orr         r0, r0, #I_BIT | ARM_MODE_IRQ
            msr         CPSR_c, r0

#- Mark the End of Interrupt on the AIC
            ldr         r0, =AIC_BASE
            str         r0, [r0, #AIC_EOICR]

#- Restore SPSR_irq and r0 from IRQ stack
            ldmia       sp!, {r0, r14}
            msr         SPSR_cxsf, r14

#- Restore adjusted  LR_irq from IRQ stack directly in the PC
            ldmia       sp!, {pc}^

            .endm

#           END
